@attribute [Route(C.NAV.Define.UserActions + "{Id:int}")]
@inject DB db
@inject Radzen.NotificationService NTF
@inject DialogService DLG
@inject NavigationManager NavigationManager

<h3>Başarım İşlemleri</h3>
@if (User == null)
{
    <p>Kullanıcı yükleniyor...</p>
}
else
{

    <RadzenCard>
        <RadzenStack Orientation="Orientation.Vertical">
            <label><strong>Kullanıcı Adı:</strong> @User.UserName</label>
            <label><strong>Tam Ad:</strong> @User.FullName</label>
            @* <label><strong>Hedef:</strong> @User.Goal</label> *@
            @* <AssignTheAchievementToAllUsers Achievement="Achievement" ShowAchievementDetails="false" OnNewUsersAssigned="() => aul?.Refresh()" /> *@
        </RadzenStack>
        @*     <RadzenCardHeader>
        <h3 class="card-title">Tüm Kullanıcılara Başarım Ver</h3>
    </RadzenCardHeader>
    <RadzenCardBody>
        <p>Bu işlem tüm kullanıcılar için başarım kaydı oluşturacaktır. Devam etmek istiyor musunuz?</p>
    </RadzenCardBody>
    <RadzenCardFooter>
        <RadzenButton ButtonType="ButtonType.Button" Text="İptal" Click="@(() => DLG.Close(false))" />
        <RadzenButton ButtonType="ButtonType.Button" Text="Devam Et" Click="@(() => DLG.Close(true))" />
    </RadzenCardFooter> *@
    </RadzenCard>
    <RadzenCard>
        <UserAchievementList @ref="aul" UserId="Id" />
    </RadzenCard>

}
@code {
    [Parameter]
    public int Id { get; set; }

    private DBUser? User { get; set; } = new DBUser();
    private UserAchievementList? aul { get; set; }
    // [Parameter]
    // [SupplyParameterFromQuery(Name = C.NAV.Params.Redirect)]
    // public string? Redirect { get; set; }
    //Loaad the achievement from the database
    protected override async Task OnInitializedAsync()
    {
        User = await db.Users.AsNoTracking().FirstOrDefaultAsync(x => x.Id == Id);
        if (User == null)
        {
            NTF.Notify(new NotificationMessage() { Severity = NotificationSeverity.Error, Summary = "Kullanıcı bulunamadı", Duration = 5000 });
            NavigationManager.NavigateTo(C.NAV.Define.Achievements);
        }
    }
}
