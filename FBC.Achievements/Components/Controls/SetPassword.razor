@namespace FBC.Achievements.Components.Controls
<h3>Şifre Belirle</h3>
<RadzenStack Orientation="Orientation.Vertical" JustifyContent="JustifyContent.Center">

    <RadzenText>Yeni şifre</RadzenText>
    <RadzenPassword @bind-Value=@newPassword aria-label="Yeni şifre" />
    <RadzenText>Yeni şifre (tekrar)</RadzenText>
    <RadzenPassword @bind-Value=@confirmPassword aria-label="Yeni şifre (tekrar)" />
    <RadzenStack Orientation="Orientation.Horizontal">
        <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Success" Variant="Variant.Flat" Size="ButtonSize.Medium" Click="Save" aria-label="Save" />
        <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Medium" class="rz-my-1 rz-ms-1" Click="@(() => OnPasswordSetCancel.InvokeAsync())" aria-label="Cancel" />
    </RadzenStack>
</RadzenStack>

<RadzenAlert AlertStyle="AlertStyle.Warning" Variant="Variant.Flat" Shade="Shade.Lighter" Visible="@(!string.IsNullOrEmpty(alertText))" AllowClose="false">
    @alertText
</RadzenAlert>
@code {
    private string newPassword = string.Empty;
    private string confirmPassword = string.Empty;
    private string alertText = string.Empty;
    private EventConsole? console;
    [Parameter]
    public EventCallback<string> OnPasswordSet { get; set; }
    [Parameter]
    public EventCallback OnPasswordSetCancel { get; set; }

    private void Save()
    {
        if (string.IsNullOrEmpty(newPassword) || string.IsNullOrEmpty(confirmPassword))
        {
            alertText = "Şifre alanları boş bırakılamaz.";
            return;
        }
        if (newPassword != confirmPassword)
        {
            alertText = "Şifreler uyuşmuyor.";
            return;
        }
        alertText = string.Empty;
        OnPasswordSet.InvokeAsync(newPassword);
    }
}
